
题目描述
输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出Yes,否则输出No。假设输入的数组的任意两个数字都互不相同。
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution {
public:
    bool VerifySquenceOfBST(vector<int> sequence) {
        if(sequence.empty())return false;
         return df(sequence,0,sequence.size()-1);
    }
    bool df(vector<int> sequence,int left,int right){
        if(right<=left)return true;
          int mark=0;
        int root = sequence[right];
         while(sequence[mark]<root){mark++;}
        int temp = mark;//划分
        while(temp<right){
            if(sequence[temp]<root)return false;
             temp++;
            }
        return df(sequence,left,mark-1)&&df(sequence,mark,right-1);
    }
};
**********************************************************************************8
注意第一，special也是递归中的一种情况，6，7两个如何判断。6一个如何判断。6，7，8如何判断，6，7，8，9。
递归将大问题化为小问题解决，出口的小问题要细致的解决，而树很多用递归，需要练习。和注意，一旦用递归，小问题的细致解决必须要注意。
