输入n个整数，找出其中最小的K个数。
例如输入4,5,1,6,2,7,3,8这8个数字，则最小的4个数字是1,2,3,4,


class Solution {
public:
    
    vector<int> GetLeastNumbers_Solution(vector<int> input, int k) {      
        vector<int> result;
        if( input.size()==0||k==0||k>input.size() ){
            return result;
        }

        ///// special case
        for( int i=input.size()/2-1;i>=0;i-- ){//初始化堆     
            adjustHeap(input,i,k);
            //initialization of heap from down to top 
        }


        ///////////////////////////intialization of the heap 
        int i=k;

        while(i<input.size()){
             
            if(input[0] > input[i]){

                int temp=input[i];
                input[i]=input[0];
                input[0]=temp;
                adjustHeap(input,0,k);
                i=k;

            }else{
                i++;
            }
        }
 ////////////////////////////// visit the every node of the vector<int> input
        for(int i=0;i<k;i++){
           
            result.push_back(input[i]);
      }
           
        return result; 

    }
     
    void adjustHeap(vector<int>&input, int i, int length)
    {//堆调整 1___initialization
        
        int child=i*2+1;

        if(child<length)
        {
             
            if(child+1<length&&input[child+1]>input[child]){
            
                child=child+1;
            
            }
            if(input[child]>input[i])
                {
             
                int temp=input[i];
                input[i]=input[child];
                input[child]=temp;
                adjustHeap(input,child,length); 
                                                }

        }
    }//1___initialization
};
